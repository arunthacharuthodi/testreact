{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useColorMode","colorMode","toggleColorMode","className","display","p","flexDirection","justifyContent","paddingLeft","paddingRight","fontSize","fontFamily","icon","isRound","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","initialColorMode","theme","config","document","getElementById"],"mappings":"sMAAe,I,4DCyCAA,MAjCf,WACE,MAAuCC,cAA/BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,gBACnB,OACE,sBAAKC,UAAU,MAAf,UACE,eAAC,IAAD,CAASC,QAAQ,OAEjBC,EAAG,EACHC,cAAc,MAAMC,eAAe,gBACnCC,YAAY,KACZC,aAAa,KALb,UASA,cAAC,IAAD,CAASC,SAAS,KAAOC,YAAU,EAAnC,4BACA,eAAC,IAAD,CAAYC,KAAM,cAAC,IAAD,IAAUC,QAAQ,OAAOC,QAASZ,EAApD,oBAEsB,UAAdD,EAAwB,OAAS,WAGzC,cAAC,IAAD,CAAYW,KAAM,cAAC,IAAD,IAAoBC,QAAQ,OAAOC,QAASZ,OAM9D,cAAC,IAAD,QCrBSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAiBC,iBAAkBC,UAAMC,OAAOF,mBAChD,cAAC,EAAD,SAGFG,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.470e0337.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {Heading, VStack, IconButton, extendTheme, useColorMode, HStack, Box, Divider, Progress} from '@chakra-ui/react'\n\nimport {FaSun, FaMoon} from 'react-icons/fa'\nimport {FaRegUserCircle} from 'react-icons/fa'\n\n\nfunction App() {\n  const { colorMode, toggleColorMode } = useColorMode()\n  return (\n    <div className=\"App\">\n      <HStack  display='flex' \n      // backgroundColor='yellow.500'\n      p={1}\n      flexDirection='row' justifyContent='space-between' \n      paddingLeft='18'\n      paddingRight='10'>\n\n      {/* how to add expanded box  */}\n      \n      <Heading fontSize='18'   fontFamily>Tinkerhub Gecw</Heading>\n      <IconButton icon={<FaSun/>} isRound='true' onClick={toggleColorMode} >\n\n      Toggle {colorMode === \"light\" ? \"Dark\" : \"Light\"}\n      </IconButton>\n      {/* user auth */}\n      <IconButton icon={<FaRegUserCircle/>} isRound='true' onClick={toggleColorMode} >\n\n      \n      </IconButton>\n \n      </HStack>\n      <Divider />\n      {/* <Progress size='xs' isIndeterminate /> */}\n      </div>\n      \n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ChakraProvider, ColorModeScript} from '@chakra-ui/react'\n\nimport theme from '@chakra-ui/theme'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}